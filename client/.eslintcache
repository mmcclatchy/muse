[{"/home/mark/appAcademy/muse/capstone/client/src/index.jsx":"1","/home/mark/appAcademy/muse/capstone/client/src/store/configureStore.js":"2","/home/mark/appAcademy/muse/capstone/client/src/components/theme.js":"3","/home/mark/appAcademy/muse/capstone/client/src/App.jsx":"4","/home/mark/appAcademy/muse/capstone/client/src/store/authentication.js":"5","/home/mark/appAcademy/muse/capstone/client/src/store/reducer/characters.js":"6","/home/mark/appAcademy/muse/capstone/client/src/store/reducer/traits.js":"7","/home/mark/appAcademy/muse/capstone/client/src/store/middleware/api.js":"8","/home/mark/appAcademy/muse/capstone/client/src/store/reducer/createCharacters.js":"9","/home/mark/appAcademy/muse/capstone/client/src/components/Navigation.jsx":"10","/home/mark/appAcademy/muse/capstone/client/src/components/ProtectedRoute.jsx":"11","/home/mark/appAcademy/muse/capstone/client/src/components/SplashPage/SplashPage.jsx":"12","/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/AppBar.jsx":"13","/home/mark/appAcademy/muse/capstone/client/src/components/structure/Grid/Grid.jsx":"14","/home/mark/appAcademy/muse/capstone/client/src/store/constants/constants.js":"15","/home/mark/appAcademy/muse/capstone/client/src/config/config.js":"16","/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/NavListDivider.jsx":"17","/home/mark/appAcademy/muse/capstone/client/src/components/CreateCharacter.jsx":"18","/home/mark/appAcademy/muse/capstone/client/src/components/SplashPage/AuthModal/AuthModal.jsx":"19","/home/mark/appAcademy/muse/capstone/client/src/components/DisplayCharacter/DisplayCharacter.jsx":"20","/home/mark/appAcademy/muse/capstone/client/src/utilities.js":"21","/home/mark/appAcademy/muse/capstone/client/src/store/actions/characters.js":"22","/home/mark/appAcademy/muse/capstone/client/src/store/actions/createCharacters.js":"23","/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/FreeSoloCreateOptionDialog.jsx":"24","/home/mark/appAcademy/muse/capstone/client/src/components/authForms/LoginForm.jsx":"25","/home/mark/appAcademy/muse/capstone/client/src/components/authForms/SignUpForm.jsx":"26","/home/mark/appAcademy/muse/capstone/client/src/components/DisplayCharacter/CharacterInfo/CharacterInfo.jsx":"27","/home/mark/appAcademy/muse/capstone/client/src/components/DisplayCharacter/CharacterInfo/TraitRender.jsx":"28","/home/mark/appAcademy/muse/capstone/client/src/store/reducer/navigation.js":"29","/home/mark/appAcademy/muse/capstone/client/src/store/actions/navigation.js":"30","/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/ResponsiveDrawer.jsx":"31","/home/mark/appAcademy/muse/capstone/client/src/components/structure/Footer/Footer.jsx":"32"},{"size":631,"mtime":1607845066441,"results":"33","hashOfConfig":"34"},{"size":844,"mtime":1607898971493,"results":"35","hashOfConfig":"34"},{"size":1236,"mtime":1607889896964,"results":"36","hashOfConfig":"34"},{"size":1815,"mtime":1607902481610,"results":"37","hashOfConfig":"34"},{"size":1676,"mtime":1607280359534,"results":"38","hashOfConfig":"34"},{"size":285,"mtime":1607316811220,"results":"39","hashOfConfig":"34"},{"size":420,"mtime":1607833525653,"results":"40","hashOfConfig":"34"},{"size":1168,"mtime":1607833502657,"results":"41","hashOfConfig":"34"},{"size":839,"mtime":1607833534329,"results":"42","hashOfConfig":"34"},{"size":343,"mtime":1607279390245,"results":"43","hashOfConfig":"34"},{"size":268,"mtime":1607673716713,"results":"44","hashOfConfig":"34"},{"size":1712,"mtime":1607659578493,"results":"45","hashOfConfig":"34"},{"size":4149,"mtime":1607907055411,"results":"46","hashOfConfig":"34"},{"size":936,"mtime":1607904589745,"results":"47","hashOfConfig":"34"},{"size":848,"mtime":1607897950445,"results":"48","hashOfConfig":"34"},{"size":171,"mtime":1607357842062,"results":"49","hashOfConfig":"34"},{"size":1390,"mtime":1607895711749,"results":"50","hashOfConfig":"34"},{"size":6146,"mtime":1607890271781,"results":"51","hashOfConfig":"34"},{"size":1470,"mtime":1607660603216,"results":"52","hashOfConfig":"34"},{"size":1253,"mtime":1607889395957,"results":"53","hashOfConfig":"34"},{"size":214,"mtime":1607315808801,"results":"54","hashOfConfig":"34"},{"size":874,"mtime":1607536102085,"results":"55","hashOfConfig":"34"},{"size":1670,"mtime":1607833486345,"results":"56","hashOfConfig":"34"},{"size":4777,"mtime":1607833471245,"results":"57","hashOfConfig":"34"},{"size":3062,"mtime":1607663963051,"results":"58","hashOfConfig":"34"},{"size":3625,"mtime":1607664851585,"results":"59","hashOfConfig":"34"},{"size":2645,"mtime":1607844445461,"results":"60","hashOfConfig":"34"},{"size":491,"mtime":1607831613028,"results":"61","hashOfConfig":"34"},{"size":338,"mtime":1607899638305,"results":"62","hashOfConfig":"34"},{"size":157,"mtime":1607899250027,"results":"63","hashOfConfig":"34"},{"size":3579,"mtime":1607902648149,"results":"64","hashOfConfig":"34"},{"size":2261,"mtime":1607916459671,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2qha39",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mark/appAcademy/muse/capstone/client/src/index.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/store/configureStore.js",[],"/home/mark/appAcademy/muse/capstone/client/src/components/theme.js",["139"],"/home/mark/appAcademy/muse/capstone/client/src/App.jsx",["140","141","142","143","144"],"/home/mark/appAcademy/muse/capstone/client/src/store/authentication.js",[],["145","146"],"/home/mark/appAcademy/muse/capstone/client/src/store/reducer/characters.js",[],"/home/mark/appAcademy/muse/capstone/client/src/store/reducer/traits.js",[],"/home/mark/appAcademy/muse/capstone/client/src/store/middleware/api.js",["147"],"import { baseApiUrl } from '../../config/config';\nimport { API, SET_TRAIT_TYPES } from '../constants/constants';\n\n\n// API Middleware receives an action object and parses the data to make a specific fetch request\nconst api = ({ dispatch, getState }) => next => async action => {\n  // console.log('PASSING THROUGH API MIDDLEWARE: ', action)\n  if (action.type !== API) return next(action);\n  // console.log('PICKED UP BY API MIDDLEWARE')\n  \n  const { authentication: { token } } = getState();\n  \n  // console.log('API: ', token)\n  \n  // Payload will determine the fetch call and what is being dispatched\n  const { endpoint, method, body, actionConst } = action.payload;\n  \n  const response = await fetch(`api/${endpoint}`, {\n    method: method,\n    headers: { \n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: body\n  });\n  \n  // console.log('RESPONSE: ', response)\n\n  if (response.ok) {\n    const { payload, traitTypes } = await response.json();\n    \n    if (traitTypes) dispatch({ type: SET_TRAIT_TYPES, payload: traitTypes })\n    \n    dispatch({ type: actionConst, payload });\n  }\n  next(action);\n};\n\nexport default api;","/home/mark/appAcademy/muse/capstone/client/src/store/reducer/createCharacters.js",[],"/home/mark/appAcademy/muse/capstone/client/src/components/Navigation.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/components/ProtectedRoute.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/components/SplashPage/SplashPage.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/AppBar.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/components/structure/Grid/Grid.jsx",["148"],"/home/mark/appAcademy/muse/capstone/client/src/store/constants/constants.js",[],"/home/mark/appAcademy/muse/capstone/client/src/config/config.js",[],"/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/NavListDivider.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/components/CreateCharacter.jsx",["149","150","151","152"],"/home/mark/appAcademy/muse/capstone/client/src/components/SplashPage/AuthModal/AuthModal.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/components/DisplayCharacter/DisplayCharacter.jsx",["153","154","155","156","157"],"import React, { useEffect } from 'react';\nimport './display_character.css';\nimport imageFrame from \"./image_frame.png\";\nimport portal from './portal2.jpg';\nimport CharacterInfo from './CharacterInfo/CharacterInfo';\nimport { useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\nexport default function DisplayCharacter() {\n  const imageUrl = useSelector(state => state.createCharacters.imageUrl)\n  \n  const keyCycle = () => {\n    let key = 0;\n    return () => key === 9 ? key = 0 : ++key\n  }\n  \n  const nextKey = keyCycle();\n  \n  return (\n    <div className=\"display_character\">\n      <div className='image_wrapper'>\n        <div className=\"default_background\" style={{ backgroundImage: `url(${portal})` }}>\n        \n        <CSSTransition \n          in={imageUrl}\n          timeout={2000}\n          classNames='character_image_box'\n        >\n          <img src={imageUrl} className='character_image_box' />\n        </CSSTransition>  \n        \n        <img \n          src={imageFrame}\n          className='character_image'\n          alt=\"image frame\" />\n        </div>\n      </div>\n      \n      \n      <div className=\"character_info_wrapper\">\n        <CharacterInfo />\n      </div>\n    </div>\n  )\n}","/home/mark/appAcademy/muse/capstone/client/src/utilities.js",[],"/home/mark/appAcademy/muse/capstone/client/src/store/actions/characters.js",[],"/home/mark/appAcademy/muse/capstone/client/src/store/actions/createCharacters.js",["158"],"import {\n  // API,\n  SET_IMAGE_URL,\n  SET_CHARACTER_TRAIT,\n  SET_BIO,\n  TOKEN_KEY,\n  SET_NEW_TRAIT,\n  CLEAR_CHARACTER_TRAIT,\n} from '../constants/constants';\nimport { baseApiUrl, originUrl } from '../../config/config';\n\nexport const setFormTrait = (trait) => async (dispatch) => {\n  if (!trait) return;\n  dispatch({ type: SET_CHARACTER_TRAIT, payload: trait });\n};\n\nexport const clearFormTrait = traitType => async dispatch => {\n  if (!traitType) return;\n  \n  dispatch({ type: CLEAR_CHARACTER_TRAIT, payload: traitType })\n}\n\nexport const setImageUrl = (imageUrl) => async (dispatch) => {\n  dispatch({ type: SET_IMAGE_URL, payload: imageUrl });\n};\n\nexport const setBio = (bio) => async (dispatch) => {\n  dispatch({ type: SET_BIO, payload: bio });\n};\n\n// export const postFormTrait = trait => dispatch => {\n// const token = localStorage.get(TOKEN_KEY);\n\n//   return {\n//     type: API,\n//     payload: {\n//       endpoint: 'traits',\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${token}`\n//       },\n//       body: trait,\n//       actionConst: SET_CHARACTER_TRAIT,\n//     }\n//   }\n// }\n\nexport const postFormTrait = (trait) => async (dispatch) => {\n  const token = localStorage.getItem(TOKEN_KEY);\n  const response = await fetch(`${baseApiUrl}/traits`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(trait),\n  });\n\n  if (response.ok) {\n    const payload = await response.json();\n    dispatch({ type: SET_CHARACTER_TRAIT, payload });\n    dispatch({ type: SET_NEW_TRAIT, payload })\n  }\n};\n","/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/FreeSoloCreateOptionDialog.jsx",["159"],"/* eslint-disable no-use-before-define */\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\n\nimport {\n  postFormTrait,\n  setFormTrait,\n  clearFormTrait,\n} from '../../store/actions/createCharacters';\n\n\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOptionDialog(props) {\n  const [value, setValue] = React.useState(null);\n  const [open, toggleOpen] = React.useState(false);\n  const [dialogValue, setDialogValue] = React.useState({ name: '' });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!value) {\n      dispatch(clearFormTrait(props.traitType));\n      return;\n    }\n\n    if (value.new) {\n      dispatch(postFormTrait(value));\n    } else {\n      dispatch(setFormTrait(value));\n    }\n  }, [value]);\n\n  const handleClose = () => {\n    setDialogValue({\n      name: '',\n      type: '',\n    });\n\n    toggleOpen(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setValue({\n      name: dialogValue.name,\n      type: props.traits[0].type,\n      new: true,\n    });\n    handleClose();\n  };\n\n  const handleChange = (event, newValue) => {\n    if (typeof newValue === 'string') {\n      // timeout to avoid instant validation of the dialog's form.\n      setTimeout(() => {\n        toggleOpen(true);\n        setDialogValue({\n          name: newValue,\n        });\n      });\n    } else if (newValue && newValue.inputValue) {\n      toggleOpen(true);\n      setDialogValue({\n        name: newValue.inputValue,\n        type: props.traits[0].type,\n      });\n    } else {\n      setValue(newValue);\n    }\n  };\n\n  const filterOptions = (options, params) => {\n    const filtered = filter(options, params);\n\n    if (params.inputValue !== '') {\n      filtered.push({\n        inputValue: params.inputValue,\n        name: `Add \"${params.inputValue}\"`,\n      });\n    }\n\n    return filtered;\n  };\n\n  const getOptionLabel = (option) => {\n    if (typeof option === 'number') return;\n    if (typeof option === 'string') return option;\n\n    if (option.inputValue) return option.inputValue;\n\n    return option.name;\n  };\n\n  return (\n    <React.Fragment>\n      {!props.traits ? null : (\n        <Autocomplete\n          value={value}\n          onChange={handleChange}\n          filterOptions={filterOptions}\n          id={props.traitType}\n          options={props.traits}\n          getOptionLabel={getOptionLabel}\n          selectOnFocus\n          clearOnBlur\n          clearOnEscape\n          handleHomeEndKeys\n          renderOption={(option) => option.name}\n          style={{ width: '100%', margin: 5 }}\n          freeSolo\n          // maxHeight={'75%'}\n          // size='small'\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label={props.typeLabel}\n              color='primary'\n              style={{ boxSizing: 'border-box' }}\n              variant='standard'\n            />\n          )}\n        />\n      )}\n      <Dialog open={open} onClose={handleClose} aria-labelledby='form-dialog-title'>\n        <form onSubmit={handleSubmit}>\n          <DialogTitle id='form-dialog-title'>Add new {props.typeLabel}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Did not see what you were looking for in our list? Please, add it!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin='dense'\n              id='name'\n              value={dialogValue.name}\n              onChange={(event) =>\n                setDialogValue({ ...dialogValue, name: event.target.value })\n              }\n              label={props.typeLabel}\n              type='text'\n            />\n            {/* <TextField\n              margin=\"dense\"\n              id=\"name\"\n              value={dialogValue.year}\n              onChange={(event) => setDialogValue({ ...dialogValue, year: event.target.value })}\n              label=\"year\"\n              type=\"number\"\n            /> */}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color='primary'>\n              Cancel\n            </Button>\n            <Button type='submit' color='primary'>\n              Add\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","/home/mark/appAcademy/muse/capstone/client/src/components/authForms/LoginForm.jsx",["160","161"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../../store/authentication';\n// import './auth.css';\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport theme from '../theme';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    minHeight: '400px',\n    minWidth: '400px',\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  \n  title: {\n    margin: '40px auto 0px',\n    fontFamily: `'Sonsie One', cursive`,\n    fontSize: '50px'\n  },\n  \n  subTitle: {\n    margin: '40px auto 50px',\n    fontSize: '20px'\n  },\n  \n  textField: {\n    margin: '10px 0'\n  },\n  \n  button_wrapper: {\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  \n  buttons: {\n    width: '100%',\n    minHeight: '40px',\n    marginTop: '30px'\n  }\n  \n}))\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const token = useSelector((state) => state.authentication.token);\n  const dispatch = useDispatch();\n  const classes = useStyles(theme)\n  \n  \n  const handleClick = () => {\n    dispatch(login(username, password));\n  };\n  \n  const handleDemoClick = () => {\n    dispatch(login('Demo-lition', 'password'));\n  };\n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n\n  // if (token) {\n  //   return <Redirect to='/' />;\n  // }\n  \n  return (\n    <div className={classes.wrapper}>\n      \n      <h1 className={classes.title}>Muse</h1>\n      <h1 className={classes.subTitle}>Welcome Back</h1>\n    \n      <TextField \n        label=\"Username\" \n        variant=\"outlined\" \n        value={username}\n        className={classes.textField}\n        onChange={updateProperty(setUsername)} />\n      \n      <TextField \n        label=\"Password\" \n        variant=\"outlined\" \n        value={password}\n        className={classes.textField}\n        type='password'\n        onChange={updateProperty(setPassword)} />\n      \n      <div className={classes.button_wrapper}>\n        <Button \n          onClick={handleClick} \n          variant='contained'\n          color='primary'\n          disableElevation\n          className={classes.buttons}\n        >Login\n        </Button> \n        \n        <Button \n          onClick={handleDemoClick} \n          variant='contained'\n          color='secondary'\n          disableElevation\n          className={classes.buttons}\n        >Demo\n        </Button> \n      </div>\n      \n      {/* <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='username'\n          value={username}\n          onChange={updateProperty(setUsername)}\n        />\n        <input\n          type='password'\n          placeholder='Password'\n          value={password}\n          onChange={updateProperty(setPassword)}\n        />\n        <button type='submit'>Login</button>\n      </form> */}\n    </div>\n  )\n};\n\nexport default LoginForm;","/home/mark/appAcademy/muse/capstone/client/src/components/authForms/SignUpForm.jsx",["162","163","164"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Button from '@material-ui/core/Button';\n\nimport { login, signUp } from '../../store/authentication';\nimport theme from '../theme';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    minHeight: '400px',\n    minWidth: '400px',\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  \n  title: {\n    margin: '40px auto 0px',\n    fontFamily: `'Sonsie One', cursive`,\n    fontSize: '50px'\n  },\n  \n  subTitle: {\n    margin: '40px auto 50px',\n    fontSize: '20px'\n  },\n  \n  textField: {\n    margin: '10px 0',\n    errorText: {\n      display: 'table'\n    }\n  },\n  \n  button_wrapper: {\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  \n  buttons: {\n    width: '100%',\n    minHeight: '40px',\n    marginTop: '30px'\n  }\n  \n}))\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [errors, setErrors] = useState([]);\n  const token = useSelector((state) => state.authentication.token);\n  const dispatch = useDispatch();\n  const classes = useStyles(theme)\n  \n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n  \n  const handleSignUpClick = () => {\n    if (password !== confirm) {\n      setErrors(['Your passwords did not match. Please try again.']);\n      return\n    }\n    \n    const newUser = {\n      username,\n      email,\n      password,\n      confirm,\n    };\n    dispatch(signUp(newUser))\n  };\n  \n  const handleDemoClick = () => {\n    dispatch(login('Demo-lition', 'password'));\n  };\n  \n  \n\n  // if (token) {\n  //   return <Redirect to='/' />;\n  // }\n  \n  return (\n    <div className={classes.wrapper}>\n      \n      <h1 className={classes.title}>Muse</h1>\n      <h1 className={classes.subTitle}>Sign Up</h1>\n    \n      <TextField \n        label=\"Username\" \n        variant=\"outlined\" \n        value={username}\n        className={classes.textField}\n        required\n        onChange={updateProperty(setUsername)} />\n      \n      <TextField \n        label=\"Email\" \n        variant=\"outlined\" \n        value={email}\n        className={classes.textField}\n        required\n        onChange={updateProperty(setEmail)} />\n      \n      <TextField \n        label=\"Password\" \n        variant=\"outlined\" \n        value={password}\n        className={classes.textField}\n        type='password'\n        required\n        onChange={updateProperty(setPassword)} />\n      \n      <TextField \n        label=\"Confirm Password\" \n        variant=\"outlined\" \n        value={confirm}\n        className={classes.textField}\n        type='password'\n        error={password !== confirm ? true : false}\n        helperText={password !== confirm ? 'Passwords do not match' : ''}\n        required\n        onChange={updateProperty(setConfirm)} />\n      \n      <div className={classes.button_wrapper}>\n        <Button \n          onClick={handleSignUpClick} \n          variant='contained'\n          color='primary'\n          disableElevation\n          className={classes.buttons}\n        >Sign Up\n        </Button> \n        \n        <Button \n          onClick={handleDemoClick} \n          variant='contained'\n          color='secondary'\n          disableElevation\n          className={classes.buttons}\n        >Demo\n        </Button>\n         \n      </div>\n    </div>\n  )\n};\n\nexport default LoginForm;","/home/mark/appAcademy/muse/capstone/client/src/components/DisplayCharacter/CharacterInfo/CharacterInfo.jsx",["165"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { CSSTransition, Transition } from 'react-transition-group';\n\nimport './character_info.css';\nimport infoFrame from './open_book.png';\nimport TraitRender from './TraitRender';\n\nexport default function CharacterInfo() {\n  const { id: firstId, name: firstName } = useSelector((state) => state.createCharacters.firstName);\n  const { id: lastId, name: lastName } = useSelector((state) => state.createCharacters.lastName);\n  const { id: physId, name: physical } = useSelector((state) => state.createCharacters.physical);\n  const { id: strId, name: strengths } = useSelector((state) => state.createCharacters.strengths);\n  const { id: weakId, name: weaknesses } = useSelector((state) => state.createCharacters.weaknesses);\n  const { id: motId, name: motivations } = useSelector((state) => state.createCharacters.motivations);\n  const { id: secId, name: secrets } = useSelector((state) => state.createCharacters.secrets);\n  const bio = useSelector(state => state.createCharacters.bio)\n\n  \n  return (\n    <div style={{ backgroundImage: `url(${infoFrame})` }} className='info_display'>\n      <div className=\"info_grid\">\n      \n        <CSSTransition in={firstName} timeout={1000} classNames='first'>\n          <TraitRender id={firstId} trait={firstName} classNames='first' timeout={1000} />\n        </CSSTransition>\n        \n        <CSSTransition in={lastName} timeout={1000} classNames='last'>\n          <TraitRender id={lastId} trait={lastName} classNames='last' timeout={1000} />\n        </CSSTransition>\n        \n        <CSSTransition in={physical} timeout={1000} classNames='trait' >\n          <TraitRender id={physId} trait={physical} classNames='trait' timeout={1000} />\n        </CSSTransition>\n        \n        <CSSTransition in={strengths} timeout={1000} classNames='trait'>\n          <TraitRender id={strId} trait={strengths} classNames='trait' timeout={1000} />\n        </CSSTransition>\n        \n        <CSSTransition in={weaknesses} timeout={1000} classNames='trait'>\n          <TraitRender id={weakId} trait={weaknesses} classNames='trait' timeout={1000} />\n        </CSSTransition>\n        \n        <CSSTransition in={motivations} timeout={1000} classNames='trait'>\n          <TraitRender id={motId} trait={motivations} classNames='trait' timeout={1000} />\n        </CSSTransition>\n        \n        <CSSTransition in={secrets} timeout={1000} classNames='trait'>\n          <TraitRender id={secId} trait={secrets} classNames='trait' timeout={1000} />\n        </CSSTransition>\n        \n        <p className=\"bio\">{bio}</p>\n        \n      </div>\n    </div>\n  );\n}\n","/home/mark/appAcademy/muse/capstone/client/src/components/DisplayCharacter/CharacterInfo/TraitRender.jsx",["166","167","168"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\n\nexport default function TraitRender(props) {\n  \n  \n  return (\n    <TransitionGroup>\n      <CSSTransition\n        timeout={props.timeout || 0}\n        key={props.id}\n        classNames={props.classNames}\n      >\n        <p className={props.classNames}>{props.trait}</p>\n      </CSSTransition>\n    </TransitionGroup>\n  )\n}","/home/mark/appAcademy/muse/capstone/client/src/store/reducer/navigation.js",[],"/home/mark/appAcademy/muse/capstone/client/src/store/actions/navigation.js",[],"/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/ResponsiveDrawer.jsx",["169"],"/home/mark/appAcademy/muse/capstone/client/src/components/structure/Footer/Footer.jsx",["170","171","172","173"],{"ruleId":"174","severity":1,"message":"175","line":4,"column":7,"nodeType":"176","messageId":"177","endLine":4,"endColumn":11},{"ruleId":"174","severity":1,"message":"178","line":2,"column":25,"nodeType":"176","messageId":"177","endLine":2,"endColumn":30},{"ruleId":"174","severity":1,"message":"179","line":2,"column":32,"nodeType":"176","messageId":"177","endLine":2,"endColumn":38},{"ruleId":"174","severity":1,"message":"180","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":18},{"ruleId":"174","severity":1,"message":"181","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":22},{"ruleId":"174","severity":1,"message":"182","line":12,"column":8,"nodeType":"176","messageId":"177","endLine":12,"endColumn":24},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"174","severity":1,"message":"187","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":20},{"ruleId":"174","severity":1,"message":"182","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":24},{"ruleId":"174","severity":1,"message":"188","line":13,"column":10,"nodeType":"176","messageId":"177","endLine":13,"endColumn":22},{"ruleId":"189","severity":1,"message":"190","line":85,"column":6,"nodeType":"191","endLine":85,"endColumn":8,"suggestions":"192"},{"ruleId":"189","severity":1,"message":"193","line":113,"column":6,"nodeType":"191","endLine":113,"endColumn":14,"suggestions":"194"},{"ruleId":"189","severity":1,"message":"193","line":118,"column":6,"nodeType":"191","endLine":118,"endColumn":20,"suggestions":"195"},{"ruleId":"174","severity":1,"message":"196","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"197","line":7,"column":25,"nodeType":"176","messageId":"177","endLine":7,"endColumn":40},{"ruleId":"174","severity":1,"message":"198","line":18,"column":9,"nodeType":"176","messageId":"177","endLine":18,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":30,"column":11,"nodeType":"201","endLine":30,"endColumn":65},{"ruleId":"202","severity":1,"message":"203","line":33,"column":9,"nodeType":"201","endLine":36,"endColumn":31},{"ruleId":"174","severity":1,"message":"204","line":10,"column":22,"nodeType":"176","messageId":"177","endLine":10,"endColumn":31},{"ruleId":"189","severity":1,"message":"205","line":41,"column":6,"nodeType":"191","endLine":41,"endColumn":13,"suggestions":"206"},{"ruleId":"174","severity":1,"message":"207","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":18},{"ruleId":"174","severity":1,"message":"208","line":50,"column":9,"nodeType":"176","messageId":"177","endLine":50,"endColumn":14},{"ruleId":"174","severity":1,"message":"207","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":18},{"ruleId":"174","severity":1,"message":"209","line":56,"column":10,"nodeType":"176","messageId":"177","endLine":56,"endColumn":16},{"ruleId":"174","severity":1,"message":"208","line":57,"column":9,"nodeType":"176","messageId":"177","endLine":57,"endColumn":14},{"ruleId":"174","severity":1,"message":"210","line":3,"column":25,"nodeType":"176","messageId":"177","endLine":3,"endColumn":35},{"ruleId":"174","severity":1,"message":"211","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"196","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"212","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":21},{"ruleId":"174","severity":1,"message":"213","line":10,"column":22,"nodeType":"176","messageId":"177","endLine":10,"endColumn":30},{"ruleId":"199","severity":1,"message":"200","line":42,"column":11,"nodeType":"201","endLine":42,"endColumn":52},{"ruleId":"199","severity":1,"message":"200","line":54,"column":11,"nodeType":"201","endLine":54,"endColumn":107},{"ruleId":"199","severity":1,"message":"200","line":66,"column":11,"nodeType":"201","endLine":66,"endColumn":54},{"ruleId":"199","severity":1,"message":"200","line":79,"column":13,"nodeType":"201","endLine":79,"endColumn":102},"no-unused-vars","'font' is assigned a value but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Navigation' is defined but never used.","'ProtectedRoute' is defined but never used.","'ResponsiveDrawer' is defined but never used.","no-native-reassign",["214"],"no-negated-in-lhs",["215"],"'baseApiUrl' is defined but never used.","'setFormTrait' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["216"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["217"],["218"],"'useEffect' is defined but never used.","'TransitionGroup' is defined but never used.","'nextKey' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'originUrl' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.traitType'. Either include them or remove the dependency array.",["219"],"'Redirect' is defined but never used.","'token' is assigned a value but never used.","'errors' is assigned a value but never used.","'Transition' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'useTheme' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [dispatch, token]",{"range":"228","text":"229"},"Update the dependencies array to be: [avatar, dispatch]",{"range":"230","text":"231"},"Update the dependencies array to be: [characterBio, dispatch]",{"range":"232","text":"233"},"Update the dependencies array to be: [dispatch, props.traitType, value]",{"range":"234","text":"235"},[2823,2825],"[dispatch, token]",[3383,3391],"[avatar, dispatch]",[3483,3497],"[characterBio, dispatch]",[1251,1258],"[dispatch, props.traitType, value]"]