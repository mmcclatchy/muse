[{"/home/mark/appAcademy/muse/capstone/client/src/index.jsx":"1","/home/mark/appAcademy/muse/capstone/client/src/store/configureStore.js":"2","/home/mark/appAcademy/muse/capstone/client/src/components/theme.js":"3","/home/mark/appAcademy/muse/capstone/client/src/App.jsx":"4","/home/mark/appAcademy/muse/capstone/client/src/store/authentication.js":"5","/home/mark/appAcademy/muse/capstone/client/src/store/reducer/characters.js":"6","/home/mark/appAcademy/muse/capstone/client/src/store/reducer/traits.js":"7","/home/mark/appAcademy/muse/capstone/client/src/store/middleware/api.js":"8","/home/mark/appAcademy/muse/capstone/client/src/store/reducer/createCharacters.js":"9","/home/mark/appAcademy/muse/capstone/client/src/components/Navigation.jsx":"10","/home/mark/appAcademy/muse/capstone/client/src/components/ProtectedRoute.jsx":"11","/home/mark/appAcademy/muse/capstone/client/src/components/SplashPage/SplashPage.jsx":"12","/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/AppBar.jsx":"13","/home/mark/appAcademy/muse/capstone/client/src/components/structure/Grid/Grid.jsx":"14","/home/mark/appAcademy/muse/capstone/client/src/store/constants/constants.js":"15","/home/mark/appAcademy/muse/capstone/client/src/config/config.js":"16","/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/NavListDivider.jsx":"17","/home/mark/appAcademy/muse/capstone/client/src/components/CreateCharacter.jsx":"18","/home/mark/appAcademy/muse/capstone/client/src/components/SplashPage/AuthModal/AuthModal.jsx":"19","/home/mark/appAcademy/muse/capstone/client/src/components/DisplayCharacter/DisplayCharacter.jsx":"20","/home/mark/appAcademy/muse/capstone/client/src/utilities.js":"21","/home/mark/appAcademy/muse/capstone/client/src/store/actions/characters.js":"22","/home/mark/appAcademy/muse/capstone/client/src/store/actions/createCharacters.js":"23","/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/FreeSoloCreateOptionDialog.jsx":"24","/home/mark/appAcademy/muse/capstone/client/src/components/authForms/LoginForm.jsx":"25","/home/mark/appAcademy/muse/capstone/client/src/components/authForms/SignUpForm.jsx":"26","/home/mark/appAcademy/muse/capstone/client/src/components/DisplayCharacter/CharacterInfo/CharacterInfo.jsx":"27","/home/mark/appAcademy/muse/capstone/client/src/components/DisplayCharacter/CharacterInfo/TraitRender.jsx":"28"},{"size":631,"mtime":1607634928392,"results":"29","hashOfConfig":"30"},{"size":780,"mtime":1607578562298,"results":"31","hashOfConfig":"30"},{"size":1236,"mtime":1607713202497,"results":"32","hashOfConfig":"30"},{"size":1741,"mtime":1607727344554,"results":"33","hashOfConfig":"30"},{"size":1676,"mtime":1607280359534,"results":"34","hashOfConfig":"30"},{"size":285,"mtime":1607316811220,"results":"35","hashOfConfig":"30"},{"size":628,"mtime":1607596123506,"results":"36","hashOfConfig":"30"},{"size":1130,"mtime":1607323727559,"results":"37","hashOfConfig":"30"},{"size":892,"mtime":1607806499938,"results":"38","hashOfConfig":"30"},{"size":343,"mtime":1607279390245,"results":"39","hashOfConfig":"30"},{"size":268,"mtime":1607673716713,"results":"40","hashOfConfig":"30"},{"size":1712,"mtime":1607659578493,"results":"41","hashOfConfig":"30"},{"size":3693,"mtime":1607725425049,"results":"42","hashOfConfig":"30"},{"size":781,"mtime":1607727430325,"results":"43","hashOfConfig":"30"},{"size":843,"mtime":1607719578979,"results":"44","hashOfConfig":"30"},{"size":171,"mtime":1607357842062,"results":"45","hashOfConfig":"30"},{"size":1040,"mtime":1607672618845,"results":"46","hashOfConfig":"30"},{"size":5943,"mtime":1607720235511,"results":"47","hashOfConfig":"30"},{"size":1470,"mtime":1607660603216,"results":"48","hashOfConfig":"30"},{"size":876,"mtime":1607578507554,"results":"49","hashOfConfig":"30"},{"size":214,"mtime":1607315808801,"results":"50","hashOfConfig":"30"},{"size":874,"mtime":1607536102085,"results":"51","hashOfConfig":"30"},{"size":1727,"mtime":1607719869226,"results":"52","hashOfConfig":"30"},{"size":4999,"mtime":1607720304103,"results":"53","hashOfConfig":"30"},{"size":3062,"mtime":1607663963051,"results":"54","hashOfConfig":"30"},{"size":3625,"mtime":1607664851585,"results":"55","hashOfConfig":"30"},{"size":3048,"mtime":1607821496811,"results":"56","hashOfConfig":"30"},{"size":486,"mtime":1607821083327,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"2qha39",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mark/appAcademy/muse/capstone/client/src/index.jsx",[],["124","125"],"/home/mark/appAcademy/muse/capstone/client/src/store/configureStore.js",[],"/home/mark/appAcademy/muse/capstone/client/src/components/theme.js",["126"],"import { createMuiTheme } from '@material-ui/core/styles';\n\n\nconst font = `'Montserrat', helvetica, sans-serif`;\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#64b5f6',\n      light: '#9be7ff',\n      dark: '#2286c3'\n    },\n    secondary: {\n      main: '#f44336',\n      light: '#ff7961',\n      dark: '#ba000d'\n    }\n  },\n  font: {\n    header: `'Sonsie One', cursive`,\n  }\n  \n  \n})\n\nexport default theme;\n\n\n\n\n\n\n\n\n\n  // palette: {\n  //   dark: {\n  //     background: '#424242',\n  //     color: '#f2f2f2',\n  //     primary: {\n  //       main: '#90caf9',\n  //       light: '#c3fdff',\n  //       dark: '#5e92f3'\n  //     },\n  //     secondary: {\n  //       main: '#1565c0',\n  //       light: '#5e92f3',\n  //       dark: '#003c8f'\n  //     },\n      \n  //   },\n  //   light: {\n  //     background: '#f2f2f2',\n  //     color: '#1b1b1b',\n  //     primary: {\n  //       main: '#90caf9',\n  //       light: '#c3fdff',\n  //       dark: '#5e92f3'\n  //     },\n  //     secondary: {\n  //       main: '#1565c0',\n  //       light: '#5e92f3',\n  //       dark: '#003c8f'\n  //     },\n      \n  //   },\n  // },\n  // typography: {\n  //   fontFamily: font,\n  // },\n  // overrides: {\n  //   AppBar: {\n  //     height: 25\n  //   },\n  // }","/home/mark/appAcademy/muse/capstone/client/src/App.jsx",["127","128","129","130"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Grid from './components/structure/Grid/Grid';\nimport Navigation from './components/Navigation';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { loadToken } from './store/authentication';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppBar from './components/Material-UI/AppBar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport theme from './components/theme';\nimport SplashPage from './components/SplashPage/SplashPage';\n\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    top: 0,\n    left: 0,\n    height: '100vh',\n    width: '100vw',\n  }\n}))\n\n\n\nconst App = () => {\n  const token = useSelector(state => state.authentication.token);\n  // const token = false\n  const [loaded, setLoaded] = useState(false);\n  const dispatch = useDispatch();\n  const classes = useStyles(theme)\n  \n  useEffect(() => {\n    setLoaded(true);\n    dispatch(loadToken());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n  useEffect(() => {\n    \n  }, [token])\n  \n  \n  if (!loaded) return null;\n  \n  return (\n  <BrowserRouter>\n    <main className={classes.main}>\n      {/* <Switch> */}\n        {/* <ProtectedRoute \n          isLoggedIn={token} \n          path='/' \n          exact={ true } \n          component={ Grid } />\n        \n        <Route \n          path='/' \n          exact={true} \n          component={SplashPage} /> */}\n          \n      {/* </Switch> */}\n      {token  \n        ? <>\n            <AppBar className='app-bar' />\n            <Grid />\n          </>\n        :  <SplashPage />}\n    </main>\n  </BrowserRouter>\n  )\n}\n\n\nexport default App;\n","/home/mark/appAcademy/muse/capstone/client/src/store/authentication.js",[],"/home/mark/appAcademy/muse/capstone/client/src/store/reducer/characters.js",[],"/home/mark/appAcademy/muse/capstone/client/src/store/reducer/traits.js",[],"/home/mark/appAcademy/muse/capstone/client/src/store/middleware/api.js",["131"],"import { baseApiUrl } from '../../config/config';\nimport { API, SET_TRAIT_TYPES } from '../constants/constants';\n\n\n// API Middleware receives an action object and parses the data to make a specific fetch request\nconst api = ({ dispatch, getState }) => next => async action => {\n  // console.log('PASSING THROUGH API MIDDLEWARE: ', action)\n  if (action.type !== API) return next(action);\n  // console.log('PICKED UP BY API MIDDLEWARE')\n  \n  const { authentication: { token } } = getState();\n\n  // Payload will determine the fetch call and what is being dispatched\n  const { endpoint, method, body, actionConst } = action.payload;\n  \n  const response = await fetch(`api/${endpoint}`, {\n    method: method,\n    headers: { \n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: body\n  });\n  \n  // console.log('RESPONSE: ', response)\n\n  if (response.ok) {\n    const { payload, traitTypes } = await response.json();\n    \n    if (traitTypes) dispatch({ type: SET_TRAIT_TYPES, payload: traitTypes })\n    \n    dispatch({ type: actionConst, payload });\n  }\n  next(action);\n};\n\nexport default api;","/home/mark/appAcademy/muse/capstone/client/src/store/reducer/createCharacters.js",[],"/home/mark/appAcademy/muse/capstone/client/src/components/Navigation.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/components/ProtectedRoute.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/components/SplashPage/SplashPage.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/AppBar.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/components/structure/Grid/Grid.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/store/constants/constants.js",[],"/home/mark/appAcademy/muse/capstone/client/src/config/config.js",[],"/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/NavListDivider.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/components/CreateCharacter.jsx",["132","133","134","135","136"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport FreeSoloCreateOptionDialog from './Material-UI/FreeSoloCreateOptionDialog';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport TextField from '@material-ui/core/TextField';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport Button from '@material-ui/core/Button';\n\n// import { getTraits } from '../store/actions/traits';\nimport { SET_TRAITS } from '../store/constants/constants';\nimport { compare } from '../utilities';\nimport { setFormTrait, setImageUrl, setBio } from '../store/actions/createCharacters';\nimport { postCharacter } from '../store/actions/characters';\nimport theme from './theme';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexFlow: 'column',\n    justifyContent: 'space-around',\n    height: '100%',\n    maxHeight: '700px',\n    width: '96%',\n    margin: '15px 10px',\n  },\n  cc__title: {\n    margin: '10px auto',\n  },\n  characterBio: {\n    margin: '20px 0',\n  },\n  header: {\n    display: 'flex',\n    backgroundColor: theme.palette.primary.main,\n  },\n  save: {\n    maxHeight: '30px',\n    margin: 'auto 7px',\n  }\n  \n}));\n\nexport default function CreateCharacter() {\n  const traits = useSelector((state) => state.traits);\n  const [avatar, setAvatar] = useState('');\n  const [characterBio, setCharacterBio] = useState('');\n  const firstName = useSelector((state) => state.createCharacters.firstName);\n  const lastName = useSelector((state) => state.createCharacters.lastName);\n  const physical = useSelector((state) => state.createCharacters.physical);\n  const strengths = useSelector((state) => state.createCharacters.strengths);\n  const weaknesses = useSelector((state) => state.createCharacters.weaknesses);\n  const motivations = useSelector((state) => state.createCharacters.motivations);\n  const secrets = useSelector((state) => state.createCharacters.secrets);\n  const imageUrl = useSelector((state) => state.createCharacters.imageUrl);\n  const bio = useSelector(state => state.createCharacters.bio)\n  const dispatch = useDispatch();\n  const classes = useStyles(theme);\n\n  \n  \n  // Fetch Character Traits on init render of component\n  useEffect(() => {\n    // dispatch(getTraits);\n\n    const fetchTraits = async () => {\n      const response = await fetch('api/traits', { 'Content-Type': 'application/json' });\n\n      if (response.ok) {\n        const { payload } = await response.json();\n        dispatch({ type: SET_TRAITS, payload });\n      }\n    };\n\n    fetchTraits();\n  }, []);\n\n  \n  // Set Local State\n  const handleImgChange = (e) => setAvatar(e.target.value);\n  const handleBioChange = (e) => setCharacterBio(e.target.value);\n  \n  \n  // Post Character Traits and Info to the Backend\n  const handleSaveClick = () => {\n    const character = {\n      firstName,\n      lastName,\n      physical,\n      strengths,\n      weaknesses,\n      motivations,\n      secrets,\n      imageUrl,\n      bio\n    };\n    dispatch(postCharacter(character));\n  };\n  \n  \n  // Dispatch Url to Redux\n  useEffect(() => {\n    dispatch(setImageUrl(avatar));\n  }, [avatar]);\n\n  // Dispatch Bio to Redux\n  useEffect(() => {\n    dispatch(setBio(characterBio));\n  }, [characterBio]);\n\n  \n  \n  return (\n    <div className={classes.container}>\n      {/* <div className=\"create-character__traits\"> */}\n      <div className={classes.header}>\n        \n        <h3 className={classes.cc__title}>Create a New Character</h3>\n        <Button\n          variant='contained'\n          color='secondary'\n          className={classes.save}\n          startIcon={<SaveAltIcon />}\n          disableElevation\n        >Save\n        </Button>\n      </div>\n\n      <FreeSoloCreateOptionDialog\n        key='1'\n        typeLabel='First Name'\n        className={classes.traits}\n        traitType='firstName'\n        traits={traits.firstName ? Object.values(traits.firstName).sort(compare) : null}\n      />\n\n      <FreeSoloCreateOptionDialog\n        key='2'\n        typeLabel='Last Name'\n        className={classes.traits}\n        traitType='lastName'\n        traits={traits.lastName ? Object.values(traits.lastName).sort(compare) : null}\n      />\n\n      <FreeSoloCreateOptionDialog\n        key='3'\n        typeLabel='Identifying Characteristics'\n        className={classes.traits}\n        traitType='physical'\n        traits={traits.physical ? Object.values(traits.physical).sort(compare) : null}\n      />\n\n      <FreeSoloCreateOptionDialog\n        key='4'\n        typeLabel='Character Strengths'\n        className={classes.traits}\n        traitType='strengths'\n        traits={traits.strengths ? Object.values(traits.strengths).sort(compare) : null}\n      />\n\n      <FreeSoloCreateOptionDialog\n        key='5'\n        typeLabel='Character Weaknesses'\n        className={classes.traits}\n        traitType='weaknesses'\n        traits={traits.weaknesses ? Object.values(traits.weaknesses).sort(compare) : null}\n      />\n\n      <FreeSoloCreateOptionDialog\n        key='6'\n        typeLabel='Motivations'\n        className={classes.traits}\n        traitType='motivations'\n        traits={\n          traits.motivations ? Object.values(traits.motivations).sort(compare) : null\n        }\n      />\n\n      <FreeSoloCreateOptionDialog\n        key='7'\n        typeLabel='Secrets'\n        className={classes.traits}\n        traitType='secrets'\n        traits={traits.secrets ? Object.values(traits.secrets).sort(compare) : null}\n      />\n\n      <TextField\n        className={classes.image}\n        label='Character Image URL'\n        onChange={handleImgChange}\n      />\n\n      <TextField\n        className={classes.characterBio}\n        label='Bio'\n        multiline\n        rows={5}\n        inputProps={{ maxlength: 500 }}\n        helperText={`${characterBio.length}/500`}\n        onChange={handleBioChange}\n        defaultValue=''\n        variant='outlined'\n      />\n\n      {/* </div> */}\n    </div>\n  );\n}\n","/home/mark/appAcademy/muse/capstone/client/src/components/SplashPage/AuthModal/AuthModal.jsx",[],"/home/mark/appAcademy/muse/capstone/client/src/components/DisplayCharacter/DisplayCharacter.jsx",["137","138"],"import React, { useEffect } from 'react';\nimport './display_character.css';\nimport imageFrame from \"./image_frame.png\";\nimport portal from './portal.jpg';\nimport CharacterInfo from './CharacterInfo/CharacterInfo';\nimport { useSelector } from 'react-redux';\n\n\nexport default function DisplayCharacter() {\n  const imageUrl = useSelector(state => state.createCharacters.imageUrl)\n  \n  \n  return (\n    <div className=\"display_character\">\n      <div className='image_wrapper'>\n        <div \n          style={{backgroundImage: `url(${imageUrl ? imageUrl : portal})`}}\n          className=\"character_image_box\">\n          <img \n            src={imageFrame}\n            className='character_image'\n            alt=\"image frame\" />\n        </div>\n        \n      </div>\n      \n      \n      <div className=\"character_info_wrapper\">\n        <CharacterInfo />\n      </div>\n    </div>\n  )\n}","/home/mark/appAcademy/muse/capstone/client/src/utilities.js",[],"/home/mark/appAcademy/muse/capstone/client/src/store/actions/characters.js",[],"/home/mark/appAcademy/muse/capstone/client/src/store/actions/createCharacters.js",["139"],"import {\n  // API,\n  SET_IMAGE_URL,\n  SET_CHARACTER_TRAIT,\n  SET_BIO,\n  TOKEN_KEY,\n  SET_NEW_TRAIT,\n  CLEAR_CHARACTER_TRAIT,\n} from '../constants/constants';\nimport { baseApiUrl, originUrl } from '../../config/config';\n\nexport const setFormTrait = (trait) => async (dispatch) => {\n  if (!trait) return;\n  dispatch({ type: SET_CHARACTER_TRAIT, payload: trait });\n};\n\nexport const clearFormTrait = traitType => async dispatch => {\n  if (!traitType) return;\n  \n  dispatch({ type: CLEAR_CHARACTER_TRAIT, payload: traitType })\n}\n\nexport const setImageUrl = (imageUrl) => async (dispatch) => {\n  dispatch({ type: SET_IMAGE_URL, payload: imageUrl });\n};\n\nexport const setBio = (bio) => async (dispatch) => {\n  dispatch({ type: SET_BIO, payload: bio });\n};\n\n// export const postFormTrait = trait => dispatch => {\n// const token = localStorage.get(TOKEN_KEY);\n\n//   return {\n//     type: API,\n//     payload: {\n//       endpoint: 'traits',\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${token}`\n//       },\n//       body: trait,\n//       actionConst: SET_CHARACTER_TRAIT,\n//     }\n//   }\n// }\n\nexport const postFormTrait = (trait) => async (dispatch) => {\n  const token = localStorage.getItem(TOKEN_KEY);\n\n  const response = await fetch(`${baseApiUrl}/traits`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(trait),\n  });\n\n  if (response.ok) {\n    const payload = await response.json();\n    console.log('POST FORM TRAIT RESPONSE: ', payload);\n    dispatch({ type: SET_CHARACTER_TRAIT, payload });\n    dispatch({ type: SET_NEW_TRAIT, payload })\n  }\n};\n","/home/mark/appAcademy/muse/capstone/client/src/components/Material-UI/FreeSoloCreateOptionDialog.jsx",["140"],"/* eslint-disable no-use-before-define */\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\n\nimport {\n  postFormTrait,\n  setFormTrait,\n  clearFormTrait,\n} from '../../store/actions/createCharacters';\n\n\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOptionDialog(props) {\n  const [value, setValue] = React.useState(null);\n  const [open, toggleOpen] = React.useState(false);\n  const [dialogValue, setDialogValue] = React.useState({ name: '' });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!value) {\n      dispatch(clearFormTrait(props.traitType));\n      return;\n    }\n\n    if (value.new) {\n      console.log('NEW VALUE');\n      dispatch(postFormTrait(value));\n    } else {\n      dispatch(setFormTrait(value));\n    }\n  }, [value]);\n\n  const handleClose = () => {\n    setDialogValue({\n      name: '',\n      type: '',\n    });\n\n    toggleOpen(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setValue({\n      name: dialogValue.name,\n      type: props.traits[0].type,\n      new: true,\n    });\n    handleClose();\n  };\n\n  const handleChange = (event, newValue) => {\n    console.log('HANDLE CHANGE: ', newValue);\n    if (typeof newValue === 'string') {\n      console.log('CONDITIONAL 1: ', newValue);\n      // timeout to avoid instant validation of the dialog's form.\n      setTimeout(() => {\n        toggleOpen(true);\n        setDialogValue({\n          name: newValue,\n        });\n      });\n    } else if (newValue && newValue.inputValue) {\n      console.log('CONDITIONAL 2: ', newValue);\n      toggleOpen(true);\n      setDialogValue({\n        name: newValue.inputValue,\n        type: props.traits[0].type,\n      });\n    } else {\n      console.log('CONDITIONAL 3: ', newValue);\n      setValue(newValue);\n    }\n  };\n\n  const filterOptions = (options, params) => {\n    const filtered = filter(options, params);\n\n    if (params.inputValue !== '') {\n      filtered.push({\n        inputValue: params.inputValue,\n        name: `Add \"${params.inputValue}\"`,\n      });\n    }\n\n    return filtered;\n  };\n\n  const getOptionLabel = (option) => {\n    if (typeof option === 'number') return;\n    if (typeof option === 'string') return option;\n\n    if (option.inputValue) return option.inputValue;\n\n    return option.name;\n  };\n\n  return (\n    <React.Fragment>\n      {!props.traits ? null : (\n        <Autocomplete\n          value={value}\n          onChange={handleChange}\n          filterOptions={filterOptions}\n          id={props.traitType}\n          options={props.traits}\n          getOptionLabel={getOptionLabel}\n          selectOnFocus\n          clearOnBlur\n          clearOnEscape\n          handleHomeEndKeys\n          renderOption={(option) => option.name}\n          style={{ width: '100%', margin: 5 }}\n          freeSolo\n          // maxHeight={'75%'}\n          // size='small'\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label={props.typeLabel}\n              color='primary'\n              style={{ boxSizing: 'border-box' }}\n              variant='standard'\n            />\n          )}\n        />\n      )}\n      <Dialog open={open} onClose={handleClose} aria-labelledby='form-dialog-title'>\n        <form onSubmit={handleSubmit}>\n          <DialogTitle id='form-dialog-title'>Add new {props.typeLabel}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Did not see what you were looking for in our list? Please, add it!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin='dense'\n              id='name'\n              value={dialogValue.name}\n              onChange={(event) =>\n                setDialogValue({ ...dialogValue, name: event.target.value })\n              }\n              label={props.typeLabel}\n              type='text'\n            />\n            {/* <TextField\n              margin=\"dense\"\n              id=\"name\"\n              value={dialogValue.year}\n              onChange={(event) => setDialogValue({ ...dialogValue, year: event.target.value })}\n              label=\"year\"\n              type=\"number\"\n            /> */}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color='primary'>\n              Cancel\n            </Button>\n            <Button type='submit' color='primary'>\n              Add\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","/home/mark/appAcademy/muse/capstone/client/src/components/authForms/LoginForm.jsx",["141","142"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../../store/authentication';\n// import './auth.css';\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport theme from '../theme';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    minHeight: '400px',\n    minWidth: '400px',\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  \n  title: {\n    margin: '40px auto 0px',\n    fontFamily: `'Sonsie One', cursive`,\n    fontSize: '50px'\n  },\n  \n  subTitle: {\n    margin: '40px auto 50px',\n    fontSize: '20px'\n  },\n  \n  textField: {\n    margin: '10px 0'\n  },\n  \n  button_wrapper: {\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  \n  buttons: {\n    width: '100%',\n    minHeight: '40px',\n    marginTop: '30px'\n  }\n  \n}))\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const token = useSelector((state) => state.authentication.token);\n  const dispatch = useDispatch();\n  const classes = useStyles(theme)\n  \n  \n  const handleClick = () => {\n    dispatch(login(username, password));\n  };\n  \n  const handleDemoClick = () => {\n    dispatch(login('Demo-lition', 'password'));\n  };\n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n\n  // if (token) {\n  //   return <Redirect to='/' />;\n  // }\n  \n  return (\n    <div className={classes.wrapper}>\n      \n      <h1 className={classes.title}>Muse</h1>\n      <h1 className={classes.subTitle}>Welcome Back</h1>\n    \n      <TextField \n        label=\"Username\" \n        variant=\"outlined\" \n        value={username}\n        className={classes.textField}\n        onChange={updateProperty(setUsername)} />\n      \n      <TextField \n        label=\"Password\" \n        variant=\"outlined\" \n        value={password}\n        className={classes.textField}\n        type='password'\n        onChange={updateProperty(setPassword)} />\n      \n      <div className={classes.button_wrapper}>\n        <Button \n          onClick={handleClick} \n          variant='contained'\n          color='primary'\n          disableElevation\n          className={classes.buttons}\n        >Login\n        </Button> \n        \n        <Button \n          onClick={handleDemoClick} \n          variant='contained'\n          color='secondary'\n          disableElevation\n          className={classes.buttons}\n        >Demo\n        </Button> \n      </div>\n      \n      {/* <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='username'\n          value={username}\n          onChange={updateProperty(setUsername)}\n        />\n        <input\n          type='password'\n          placeholder='Password'\n          value={password}\n          onChange={updateProperty(setPassword)}\n        />\n        <button type='submit'>Login</button>\n      </form> */}\n    </div>\n  )\n};\n\nexport default LoginForm;","/home/mark/appAcademy/muse/capstone/client/src/components/authForms/SignUpForm.jsx",["143","144","145"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Button from '@material-ui/core/Button';\n\nimport { login, signUp } from '../../store/authentication';\nimport theme from '../theme';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    minHeight: '400px',\n    minWidth: '400px',\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  \n  title: {\n    margin: '40px auto 0px',\n    fontFamily: `'Sonsie One', cursive`,\n    fontSize: '50px'\n  },\n  \n  subTitle: {\n    margin: '40px auto 50px',\n    fontSize: '20px'\n  },\n  \n  textField: {\n    margin: '10px 0',\n    errorText: {\n      display: 'table'\n    }\n  },\n  \n  button_wrapper: {\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  \n  buttons: {\n    width: '100%',\n    minHeight: '40px',\n    marginTop: '30px'\n  }\n  \n}))\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [errors, setErrors] = useState([]);\n  const token = useSelector((state) => state.authentication.token);\n  const dispatch = useDispatch();\n  const classes = useStyles(theme)\n  \n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n  \n  const handleSignUpClick = () => {\n    if (password !== confirm) {\n      setErrors(['Your passwords did not match. Please try again.']);\n      return\n    }\n    \n    const newUser = {\n      username,\n      email,\n      password,\n      confirm,\n    };\n    dispatch(signUp(newUser))\n  };\n  \n  const handleDemoClick = () => {\n    dispatch(login('Demo-lition', 'password'));\n  };\n  \n  \n\n  // if (token) {\n  //   return <Redirect to='/' />;\n  // }\n  \n  return (\n    <div className={classes.wrapper}>\n      \n      <h1 className={classes.title}>Muse</h1>\n      <h1 className={classes.subTitle}>Sign Up</h1>\n    \n      <TextField \n        label=\"Username\" \n        variant=\"outlined\" \n        value={username}\n        className={classes.textField}\n        required\n        onChange={updateProperty(setUsername)} />\n      \n      <TextField \n        label=\"Email\" \n        variant=\"outlined\" \n        value={email}\n        className={classes.textField}\n        required\n        onChange={updateProperty(setEmail)} />\n      \n      <TextField \n        label=\"Password\" \n        variant=\"outlined\" \n        value={password}\n        className={classes.textField}\n        type='password'\n        required\n        onChange={updateProperty(setPassword)} />\n      \n      <TextField \n        label=\"Confirm Password\" \n        variant=\"outlined\" \n        value={confirm}\n        className={classes.textField}\n        type='password'\n        error={password !== confirm ? true : false}\n        helperText={password !== confirm ? 'Passwords do not match' : ''}\n        required\n        onChange={updateProperty(setConfirm)} />\n      \n      <div className={classes.button_wrapper}>\n        <Button \n          onClick={handleSignUpClick} \n          variant='contained'\n          color='primary'\n          disableElevation\n          className={classes.buttons}\n        >Sign Up\n        </Button> \n        \n        <Button \n          onClick={handleDemoClick} \n          variant='contained'\n          color='secondary'\n          disableElevation\n          className={classes.buttons}\n        >Demo\n        </Button>\n         \n      </div>\n    </div>\n  )\n};\n\nexport default LoginForm;","/home/mark/appAcademy/muse/capstone/client/src/components/DisplayCharacter/CharacterInfo/CharacterInfo.jsx",["146"],"/home/mark/appAcademy/muse/capstone/client/src/components/DisplayCharacter/CharacterInfo/TraitRender.jsx",["147","148","149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":4,"column":7,"nodeType":"156","messageId":"157","endLine":4,"endColumn":11},{"ruleId":"154","severity":1,"message":"158","line":2,"column":25,"nodeType":"156","messageId":"157","endLine":2,"endColumn":30},{"ruleId":"154","severity":1,"message":"159","line":2,"column":32,"nodeType":"156","messageId":"157","endLine":2,"endColumn":38},{"ruleId":"154","severity":1,"message":"160","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":18},{"ruleId":"154","severity":1,"message":"161","line":5,"column":8,"nodeType":"156","messageId":"157","endLine":5,"endColumn":22},{"ruleId":"154","severity":1,"message":"162","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":20},{"ruleId":"154","severity":1,"message":"163","line":13,"column":10,"nodeType":"156","messageId":"157","endLine":13,"endColumn":22},{"ruleId":"164","severity":1,"message":"165","line":76,"column":6,"nodeType":"166","endLine":76,"endColumn":8,"suggestions":"167"},{"ruleId":"154","severity":1,"message":"168","line":85,"column":9,"nodeType":"156","messageId":"157","endLine":85,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":104,"column":6,"nodeType":"166","endLine":104,"endColumn":14,"suggestions":"169"},{"ruleId":"164","severity":1,"message":"165","line":109,"column":6,"nodeType":"166","endLine":109,"endColumn":20,"suggestions":"170"},{"ruleId":"154","severity":1,"message":"171","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":19,"column":11,"nodeType":"174","endLine":22,"endColumn":33},{"ruleId":"154","severity":1,"message":"175","line":10,"column":22,"nodeType":"156","messageId":"157","endLine":10,"endColumn":31},{"ruleId":"164","severity":1,"message":"176","line":42,"column":6,"nodeType":"166","endLine":42,"endColumn":13,"suggestions":"177"},{"ruleId":"154","severity":1,"message":"178","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":18},{"ruleId":"154","severity":1,"message":"179","line":50,"column":9,"nodeType":"156","messageId":"157","endLine":50,"endColumn":14},{"ruleId":"154","severity":1,"message":"178","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":18},{"ruleId":"154","severity":1,"message":"180","line":56,"column":10,"nodeType":"156","messageId":"157","endLine":56,"endColumn":16},{"ruleId":"154","severity":1,"message":"179","line":57,"column":9,"nodeType":"156","messageId":"157","endLine":57,"endColumn":14},{"ruleId":"154","severity":1,"message":"181","line":3,"column":25,"nodeType":"156","messageId":"157","endLine":3,"endColumn":35},{"ruleId":"154","severity":1,"message":"182","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"171","line":1,"column":27,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"154","severity":1,"message":"183","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":21},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'font' is assigned a value but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Navigation' is defined but never used.","'ProtectedRoute' is defined but never used.","'baseApiUrl' is defined but never used.","'setFormTrait' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["186"],"'handleSaveClick' is assigned a value but never used.",["187"],["188"],"'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'originUrl' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.traitType'. Either include them or remove the dependency array.",["189"],"'Redirect' is defined but never used.","'token' is assigned a value but never used.","'errors' is assigned a value but never used.","'Transition' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [dispatch]",{"range":"198","text":"199"},"Update the dependencies array to be: [avatar, dispatch]",{"range":"200","text":"201"},"Update the dependencies array to be: [characterBio, dispatch]",{"range":"202","text":"203"},"Update the dependencies array to be: [dispatch, props.traitType, value]",{"range":"204","text":"205"},[2578,2580],"[dispatch]",[3138,3146],"[avatar, dispatch]",[3238,3252],"[characterBio, dispatch]",[1283,1290],"[dispatch, props.traitType, value]"]