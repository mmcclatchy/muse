[{"/home/mark/appAcademy/capstone2/capstone/client/src/index.jsx":"1","/home/mark/appAcademy/capstone2/capstone/client/src/store/configureStore.js":"2","/home/mark/appAcademy/capstone2/capstone/client/src/App.jsx":"3","/home/mark/appAcademy/capstone2/capstone/client/src/store/authentication.js":"4","/home/mark/appAcademy/capstone2/capstone/client/src/store/reducer/traits.js":"5","/home/mark/appAcademy/capstone2/capstone/client/src/store/reducer/characters.js":"6","/home/mark/appAcademy/capstone2/capstone/client/src/store/middleware/api.js":"7","/home/mark/appAcademy/capstone2/capstone/client/src/components/LoginForm.jsx":"8","/home/mark/appAcademy/capstone2/capstone/client/src/components/SignUpForm.jsx":"9","/home/mark/appAcademy/capstone2/capstone/client/src/components/PlaceHolder.jsx":"10","/home/mark/appAcademy/capstone2/capstone/client/src/components/Navigation.jsx":"11","/home/mark/appAcademy/capstone2/capstone/client/src/components/ProtectedRoute.jsx":"12","/home/mark/appAcademy/capstone2/capstone/client/src/store/constants/constants.js":"13","/home/mark/appAcademy/capstone2/capstone/client/src/config/config.js":"14","/home/mark/appAcademy/capstone2/capstone/client/src/components/CreateCharacter.jsx":"15","/home/mark/appAcademy/capstone2/capstone/client/src/store/actions/traits.js":"16","/home/mark/appAcademy/capstone2/capstone/client/src/components/Material-UI/FreeSoloCreateOptionDialog.jsx":"17","/home/mark/appAcademy/capstone2/capstone/client/src/store/actions/character.js":"18","/home/mark/appAcademy/capstone2/capstone/client/src/utilities.js":"19","/home/mark/appAcademy/capstone2/capstone/client/src/store/reducer/createCharacters.js":"20","/home/mark/appAcademy/capstone2/capstone/client/src/store/actions/createCharacters.js":"21"},{"size":392,"mtime":1607393562930,"results":"22","hashOfConfig":"23"},{"size":777,"mtime":1607316880651,"results":"24","hashOfConfig":"23"},{"size":1207,"mtime":1607393562930,"results":"25","hashOfConfig":"23"},{"size":1676,"mtime":1607280359534,"results":"26","hashOfConfig":"23"},{"size":372,"mtime":1607308588922,"results":"27","hashOfConfig":"23"},{"size":285,"mtime":1607316811220,"results":"28","hashOfConfig":"23"},{"size":1130,"mtime":1607323727559,"results":"29","hashOfConfig":"23"},{"size":1177,"mtime":1607279414141,"results":"30","hashOfConfig":"23"},{"size":1556,"mtime":1607279329510,"results":"31","hashOfConfig":"23"},{"size":474,"mtime":1607393562930,"results":"32","hashOfConfig":"23"},{"size":343,"mtime":1607279390245,"results":"33","hashOfConfig":"23"},{"size":273,"mtime":1607279349242,"results":"34","hashOfConfig":"23"},{"size":485,"mtime":1607304449264,"results":"35","hashOfConfig":"23"},{"size":171,"mtime":1607357842062,"results":"36","hashOfConfig":"23"},{"size":2758,"mtime":1607393562930,"results":"37","hashOfConfig":"23"},{"size":268,"mtime":1607308276363,"results":"38","hashOfConfig":"23"},{"size":4667,"mtime":1607393562930,"results":"39","hashOfConfig":"23"},{"size":432,"mtime":1607321207977,"results":"40","hashOfConfig":"23"},{"size":214,"mtime":1607315808801,"results":"41","hashOfConfig":"23"},{"size":441,"mtime":1607361037012,"results":"42","hashOfConfig":"23"},{"size":1330,"mtime":1607361259275,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"265328",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},"/home/mark/appAcademy/capstone2/capstone/client/src/index.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/configureStore.js",[],["94","95"],"/home/mark/appAcademy/capstone2/capstone/client/src/App.jsx",["96"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LoginForm from './components/LoginForm';\nimport SignUpForm from './components/SignUpForm';\nimport PlaceHolder from './components/PlaceHolder';\nimport Navigation from './components/Navigation';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { loadToken } from './store/authentication';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst App = () => {\n  const token = useSelector(state => state.authentication.token);\n  // const token = false\n  const [loaded, setLoaded] = useState(false);\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    setLoaded(true);\n    dispatch(loadToken());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n  if (!loaded) return null;\n  \n  return (\n  <BrowserRouter>\n    <Navigation />\n    <Switch>\n      <ProtectedRoute isLoggedIn={token} path='/' exact={ true } component={ PlaceHolder } />\n      <Route path='/login' exact={ true } component={ LoginForm } />\n      <Route path='/signup' exact={ true } component={ SignUpForm } />\n    </Switch>\n  </BrowserRouter>\n  )\n}\n\n\nexport default App;\n","/home/mark/appAcademy/capstone2/capstone/client/src/store/authentication.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/reducer/traits.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/reducer/characters.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/middleware/api.js",["97"],"import { baseApiUrl } from '../../config/config';\nimport { API, SET_TRAIT_TYPES } from '../constants/constants';\n\n\n// API Middleware receives an action object and parses the data to make a specific fetch request\nconst api = ({ dispatch, getState }) => next => async action => {\n  // console.log('PASSING THROUGH API MIDDLEWARE: ', action)\n  if (action.type !== API) return next(action);\n  // console.log('PICKED UP BY API MIDDLEWARE')\n  \n  const { authentication: { token } } = getState();\n\n  // Payload will determine the fetch call and what is being dispatched\n  const { endpoint, method, body, actionConst } = action.payload;\n  \n  const response = await fetch(`api/${endpoint}`, {\n    method: method,\n    headers: { \n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: body\n  });\n  \n  // console.log('RESPONSE: ', response)\n\n  if (response.ok) {\n    const { payload, traitTypes } = await response.json();\n    \n    if (traitTypes) dispatch({ type: SET_TRAIT_TYPES, payload: traitTypes })\n    \n    dispatch({ type: actionConst, payload });\n  }\n  next(action);\n};\n\nexport default api;","/home/mark/appAcademy/capstone2/capstone/client/src/components/LoginForm.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/components/SignUpForm.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/components/PlaceHolder.jsx",["98"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../store/authentication';\nimport CreateCharacter from './CreateCharacter';\n\n\nconst PlaceHolder = () => {\n  const dispatch = useDispatch();\n  \n  const handleClick = () => dispatch(logout());\n    \n  \n  \n  \n  return (\n    <>\n      <h1>Protected Main Page</h1>\n      <button onClick={handleClick} >Log Out</button>\n      <CreateCharacter />\n    </>\n  )\n};\n\nexport default PlaceHolder;","/home/mark/appAcademy/capstone2/capstone/client/src/components/Navigation.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/components/ProtectedRoute.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/constants/constants.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/config/config.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/components/CreateCharacter.jsx",["99","100"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FreeSoloCreateOptionDialog from './Material-UI/FreeSoloCreateOptionDialog';\n\n// import { getTraits } from '../store/actions/traits';\nimport { SET_TRAITS } from '../store/constants/constants';\nimport { compare } from '../utilities';\n\n\n\nexport default function CreateCharacter() {\n  const traits = useSelector(state => state.traits);\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    // dispatch(getTraits);\n    \n    const fetchTraits = async () => {\n      const response = await fetch('api/traits', { 'Content-Type': 'application/json' });\n      \n      if (response.ok) {\n        const { payload } = await response.json();\n        dispatch({ type: SET_TRAITS, payload })\n      }\n    }\n    \n    fetchTraits()\n    \n  }, [])\n  \n\n  \n  return (\n    <div className=\"create-character\">\n      <div className=\"create-character__traits\">\n        \n          <h3 className=\"form__title\">Create a New Character</h3>\n          \n          <FreeSoloCreateOptionDialog \n            key='1' \n            type={'First Name'}\n            className='traits__input'\n            traits={traits.firstName ? Object.values(traits.firstName).sort(compare) : null} />\n            \n          <FreeSoloCreateOptionDialog \n            key='2' \n            type={'Last Name'}\n            className='traits__input'\n            traits={traits.lastName ? Object.values(traits.lastName).sort(compare) : null} />\n            \n          <FreeSoloCreateOptionDialog \n            key='3' \n            type={'Physical Characteristics'} \n            className='traits__input'\n            traits={traits.physical ? Object.values(traits.physical).sort(compare) : null} />\n            \n          <FreeSoloCreateOptionDialog \n            key='4'\n            type={'Character Strengths'} \n            className='traits__input'\n            traits={traits.strengths ? Object.values(traits.strengths).sort(compare) : null} />\n            \n          <FreeSoloCreateOptionDialog \n            key='5'\n            type={'Character Weaknesses'} \n            className='traits__input'\n            traits={traits.weaknesses ? Object.values(traits.weaknesses).sort(compare) : null} />\n            \n          <FreeSoloCreateOptionDialog \n            key='6'\n            type={'Motivations'} \n            className='traits__input'\n            traits={traits.motivations ? Object.values(traits.motivations).sort(compare) : null} />\n            \n          <FreeSoloCreateOptionDialog \n            key='7'\n            type={'Secrets'} \n            className='traits__input'\n            traits={traits.secrets ? Object.values(traits.secrets).sort(compare) : null} />\n          \n      </div>\n    </div>\n  )\n}","/home/mark/appAcademy/capstone2/capstone/client/src/store/actions/traits.js",[],["101","102"],"/home/mark/appAcademy/capstone2/capstone/client/src/components/Material-UI/FreeSoloCreateOptionDialog.jsx",["103"],"/* eslint-disable no-use-before-define */\nimport React, { useEffect }  from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { useDispatch } from 'react-redux';\nimport { postFormTrait, setFormTrait } from '../../store/actions/createCharacters';\n\n\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOptionDialog(props) {\n  const [value, setValue] = React.useState(null);\n  const [open, toggleOpen] = React.useState(false);\n  const [dialogValue, setDialogValue] = React.useState({ name: '' });\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!value) return\n    console.log('VALUE!!!: ', value)\n    if (value.new) {\n      console.log('NEW TRAIT!!!!')\n      dispatch(postFormTrait(value))\n    }\n    dispatch(setFormTrait(value))\n  }, [value])\n  \n  \n  \n  const handleClose = () => {\n    setDialogValue({\n      name: '',\n      type: '',\n    });\n\n    toggleOpen(false);\n  };\n\n\n  const handleSubmit = (event) => {\n    console.log('DIALOG VALUE: ', dialogValue)\n    event.preventDefault();\n    setValue({\n      name: dialogValue.name,\n      type: props.traits[0].type,\n      new: true\n    });\n    console.log('VALUE: ', value)\n    handleClose();\n  };\n  \n  \n  const handleChange = (event, newValue) => {\n    console.log('HANDLE CHANGE: NEW VALUE: ', newValue)\n    if (typeof newValue === 'string') {\n      console.log('CONDITIONAL 1', )\n      // timeout to avoid instant validation of the dialog's form.\n      setTimeout(() => {\n        toggleOpen(true);\n        setDialogValue({\n          name: newValue,\n        });\n      });\n    } else if (newValue && newValue.inputValue) {\n      console.log('CONDITIONAL 2')\n      toggleOpen(true);\n      setDialogValue({\n        name: newValue.inputValue,\n        type: props.traits[0].type\n      });\n    } else {\n      setValue(newValue);\n    }\n  }\n  \n  const filterOptions = (options, params) => {\n    const filtered = filter(options, params);\n\n    if (params.inputValue !== '') {\n      filtered.push({\n        inputValue: params.inputValue,\n        name: `Add \"${params.inputValue}\"`,\n      });\n    }\n\n    return filtered;\n  }\n  \n  const getOptionLabel = (option) => {\n    if (typeof option === 'number') return\n    if (typeof option === 'string') return option;\n    \n    if (option.inputValue) return option.inputValue;\n    \n    return option.name;\n  }\n  \n  return (\n    <React.Fragment>\n      {!props.traits ? null : <Autocomplete\n        value={value}\n        onChange={handleChange}\n        filterOptions={filterOptions}\n        id={`${props.type.split(' ').join('')}`}\n        options={props.traits}\n        getOptionLabel={getOptionLabel}\n        selectOnFocus\n        clearOnBlur\n        handleHomeEndKeys\n        renderOption={(option) => option.name}\n        style={{ width: 300 }}\n        freeSolo\n        renderInput={(params) => (\n          <TextField {...params} label={props.type} variant=\"outlined\" />\n        )}\n      />}\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <form onSubmit={handleSubmit}>\n          <DialogTitle id=\"form-dialog-title\">Add new {props.type}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Did not see what you were looking for in our list? Please, add it!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              value={dialogValue.name}\n              onChange={(event) => setDialogValue({ ...dialogValue, name: event.target.value })}\n              label={props.type}\n              type=\"text\"\n            />\n            {/* <TextField\n              margin=\"dense\"\n              id=\"name\"\n              value={dialogValue.year}\n              onChange={(event) => setDialogValue({ ...dialogValue, year: event.target.value })}\n              label=\"year\"\n              type=\"number\"\n            /> */}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button type=\"submit\" color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","/home/mark/appAcademy/capstone2/capstone/client/src/store/actions/character.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/utilities.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/reducer/createCharacters.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/actions/createCharacters.js",["104","105"],"import { API, CREATE_CHARACTER, TOKEN_KEY } from '../constants/constants';\nimport { baseApiUrl, originUrl } from '../../config/config'\n\n\nexport const setFormTrait = trait => async dispatch => {\n  console.log('SET FORM TRAIT: ', trait)\n  dispatch({ type: CREATE_CHARACTER, payload: trait })\n}\n\n\n// export const postFormTrait = trait => dispatch => {\n  // const token = localStorage.get(TOKEN_KEY);\n  \n  //   return {\n    //     type: API,\n    //     payload: {\n      //       endpoint: 'traits', \n      //       method: 'POST',\n      //       headers: {\n        //         'Content-Type': 'application/json',\n        //         Authorization: `Bearer ${token}`\n        //       },\n        //       body: trait,\n        //       actionConst: CREATE_CHARACTER,\n        //     }\n        //   }\n        // }\n        \nexport const postFormTrait = trait => async dispatch => {\n  const token = localStorage.getItem(TOKEN_KEY);\n  console.log('POST FORM TRAIT!')\n  console.log('TRAIT!!!!!: ', trait)\n  const response = await fetch(`${baseApiUrl}/traits`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(trait)\n  });\n  \n  if (response.ok) {\n    const payload = await response.json()\n    dispatch({ type: CREATE_CHARACTER, payload })\n  }\n}",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":18},{"ruleId":"110","severity":1,"message":"114","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":20},{"ruleId":"110","severity":1,"message":"115","line":10,"column":9,"nodeType":"112","messageId":"113","endLine":10,"endColumn":20},{"ruleId":"110","severity":1,"message":"116","line":10,"column":10,"nodeType":"112","messageId":"113","endLine":10,"endColumn":24},{"ruleId":"117","severity":1,"message":"118","line":42,"column":6,"nodeType":"119","endLine":42,"endColumn":8,"suggestions":"120"},{"ruleId":"106","replacedBy":"121"},{"ruleId":"108","replacedBy":"122"},{"ruleId":"117","severity":1,"message":"118","line":32,"column":6,"nodeType":"119","endLine":32,"endColumn":13,"suggestions":"123"},{"ruleId":"110","severity":1,"message":"124","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},{"ruleId":"110","severity":1,"message":"125","line":2,"column":22,"nodeType":"112","messageId":"113","endLine":2,"endColumn":31},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar","'baseApiUrl' is defined but never used.","'handleClick' is assigned a value but never used.","'FormHelperText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["128"],["126"],["127"],["129"],"'API' is defined but never used.","'originUrl' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [dispatch]",{"range":"134","text":"135"},"Update the dependencies array to be: [dispatch, value]",{"range":"136","text":"137"},[1142,1144],"[dispatch]",[1216,1223],"[dispatch, value]"]