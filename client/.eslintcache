[{"/home/mark/appAcademy/capstone2/capstone/client/src/index.jsx":"1","/home/mark/appAcademy/capstone2/capstone/client/src/store/configureStore.js":"2","/home/mark/appAcademy/capstone2/capstone/client/src/App.jsx":"3","/home/mark/appAcademy/capstone2/capstone/client/src/store/authentication.js":"4","/home/mark/appAcademy/capstone2/capstone/client/src/store/reducer/traits.js":"5","/home/mark/appAcademy/capstone2/capstone/client/src/store/reducer/characters.js":"6","/home/mark/appAcademy/capstone2/capstone/client/src/store/middleware/api.js":"7","/home/mark/appAcademy/capstone2/capstone/client/src/components/PlaceHolder.jsx":"8","/home/mark/appAcademy/capstone2/capstone/client/src/components/Navigation.jsx":"9","/home/mark/appAcademy/capstone2/capstone/client/src/components/ProtectedRoute.jsx":"10","/home/mark/appAcademy/capstone2/capstone/client/src/store/constants/constants.js":"11","/home/mark/appAcademy/capstone2/capstone/client/src/config/config.js":"12","/home/mark/appAcademy/capstone2/capstone/client/src/components/CreateCharacter.jsx":"13","/home/mark/appAcademy/capstone2/capstone/client/src/store/actions/traits.js":"14","/home/mark/appAcademy/capstone2/capstone/client/src/components/Material-UI/FreeSoloCreateOptionDialog.jsx":"15","/home/mark/appAcademy/capstone2/capstone/client/src/utilities.js":"16","/home/mark/appAcademy/capstone2/capstone/client/src/store/reducer/createCharacters.js":"17","/home/mark/appAcademy/capstone2/capstone/client/src/store/actions/createCharacters.js":"18","/home/mark/appAcademy/capstone2/capstone/client/src/components/Material-UI/AppBar.jsx":"19","/home/mark/appAcademy/capstone2/capstone/client/src/components/structure/Grid/Grid.jsx":"20","/home/mark/appAcademy/capstone2/capstone/client/src/components/theme.js":"21","/home/mark/appAcademy/capstone2/capstone/client/src/components/DisplayCharacter/DisplayCharacter.jsx":"22","/home/mark/appAcademy/capstone2/capstone/client/src/components/DisplayCharacter/CharacterInfo/CharacterInfo.jsx":"23","/home/mark/appAcademy/capstone2/capstone/client/src/store/actions/characters.js":"24","/home/mark/appAcademy/capstone2/capstone/client/src/components/SplashPage/SplashPage.jsx":"25","/home/mark/appAcademy/capstone2/capstone/client/src/components/SplashPage/AuthModal/AuthModal.jsx":"26","/home/mark/appAcademy/capstone2/capstone/client/src/components/authForms/SignUpForm.jsx":"27","/home/mark/appAcademy/capstone2/capstone/client/src/components/authForms/LoginForm.jsx":"28","/home/mark/appAcademy/capstone2/capstone/client/src/components/Material-UI/NavListDivider.jsx":"29"},{"size":631,"mtime":1607634928392,"results":"30","hashOfConfig":"31"},{"size":780,"mtime":1607578562298,"results":"32","hashOfConfig":"31"},{"size":1654,"mtime":1607673883180,"results":"33","hashOfConfig":"31"},{"size":1676,"mtime":1607280359534,"results":"34","hashOfConfig":"31"},{"size":628,"mtime":1607596123506,"results":"35","hashOfConfig":"31"},{"size":285,"mtime":1607316811220,"results":"36","hashOfConfig":"31"},{"size":1130,"mtime":1607323727559,"results":"37","hashOfConfig":"31"},{"size":482,"mtime":1607393598138,"results":"38","hashOfConfig":"31"},{"size":343,"mtime":1607279390245,"results":"39","hashOfConfig":"31"},{"size":268,"mtime":1607673716713,"results":"40","hashOfConfig":"31"},{"size":847,"mtime":1607588361290,"results":"41","hashOfConfig":"31"},{"size":171,"mtime":1607357842062,"results":"42","hashOfConfig":"31"},{"size":5636,"mtime":1607667550250,"results":"43","hashOfConfig":"31"},{"size":268,"mtime":1607308276363,"results":"44","hashOfConfig":"31"},{"size":5119,"mtime":1607587651178,"results":"45","hashOfConfig":"31"},{"size":214,"mtime":1607315808801,"results":"46","hashOfConfig":"31"},{"size":898,"mtime":1607594648055,"results":"47","hashOfConfig":"31"},{"size":1570,"mtime":1607595028425,"results":"48","hashOfConfig":"31"},{"size":3693,"mtime":1607673505842,"results":"49","hashOfConfig":"31"},{"size":888,"mtime":1607672504554,"results":"50","hashOfConfig":"31"},{"size":1188,"mtime":1607671806056,"results":"51","hashOfConfig":"31"},{"size":876,"mtime":1607578507554,"results":"52","hashOfConfig":"31"},{"size":1314,"mtime":1607503110579,"results":"53","hashOfConfig":"31"},{"size":874,"mtime":1607536102085,"results":"54","hashOfConfig":"31"},{"size":1712,"mtime":1607659578493,"results":"55","hashOfConfig":"31"},{"size":1470,"mtime":1607660603216,"results":"56","hashOfConfig":"31"},{"size":3625,"mtime":1607664851585,"results":"57","hashOfConfig":"31"},{"size":3062,"mtime":1607663963051,"results":"58","hashOfConfig":"31"},{"size":1040,"mtime":1607672618845,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"265328",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/home/mark/appAcademy/capstone2/capstone/client/src/index.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/configureStore.js",[],["128","129"],"/home/mark/appAcademy/capstone2/capstone/client/src/App.jsx",["130","131","132","133","134"],"/home/mark/appAcademy/capstone2/capstone/client/src/store/authentication.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/reducer/traits.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/reducer/characters.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/middleware/api.js",["135"],"import { baseApiUrl } from '../../config/config';\nimport { API, SET_TRAIT_TYPES } from '../constants/constants';\n\n\n// API Middleware receives an action object and parses the data to make a specific fetch request\nconst api = ({ dispatch, getState }) => next => async action => {\n  // console.log('PASSING THROUGH API MIDDLEWARE: ', action)\n  if (action.type !== API) return next(action);\n  // console.log('PICKED UP BY API MIDDLEWARE')\n  \n  const { authentication: { token } } = getState();\n\n  // Payload will determine the fetch call and what is being dispatched\n  const { endpoint, method, body, actionConst } = action.payload;\n  \n  const response = await fetch(`api/${endpoint}`, {\n    method: method,\n    headers: { \n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: body\n  });\n  \n  // console.log('RESPONSE: ', response)\n\n  if (response.ok) {\n    const { payload, traitTypes } = await response.json();\n    \n    if (traitTypes) dispatch({ type: SET_TRAIT_TYPES, payload: traitTypes })\n    \n    dispatch({ type: actionConst, payload });\n  }\n  next(action);\n};\n\nexport default api;","/home/mark/appAcademy/capstone2/capstone/client/src/components/PlaceHolder.jsx",["136"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../store/authentication';\nimport CreateCharacter from './CreateCharacter';\n\n\nconst PlaceHolder = () => {\n  const dispatch = useDispatch();\n  \n  const handleClick = () => dispatch(logout());\n    \n  \n  \n  \n  return (\n    <>\n      <h1>Protected Main Page</h1>\n      <button onClick={handleClick} >Log Out</button>\n      <CreateCharacter />\n    </>\n  )\n};\n\nexport default PlaceHolder;",["137","138"],"/home/mark/appAcademy/capstone2/capstone/client/src/components/Navigation.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/components/ProtectedRoute.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/constants/constants.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/config/config.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/components/CreateCharacter.jsx",["139","140","141","142","143"],"/home/mark/appAcademy/capstone2/capstone/client/src/store/actions/traits.js",[],["144","145"],"/home/mark/appAcademy/capstone2/capstone/client/src/components/Material-UI/FreeSoloCreateOptionDialog.jsx",["146","147"],"/* eslint-disable no-use-before-define */\nimport React, { useEffect }  from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { useDispatch } from 'react-redux';\nimport { postFormTrait, setFormTrait } from '../../store/actions/createCharacters';\nimport sizing from '@material-ui/system/sizing'\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../theme';\n\n\nconst filter = createFilterOptions();\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiFormLabel-root\": {\n      // fontSize: 13\n    },\n    // height: 25\n  },\n  // autocomplete: {\n    \n  //   height: 25,\n  //   margin: '10px 0', \n  //   boxSizing: \"border-box\",\n  // }\n}))\n\n\nexport default function FreeSoloCreateOptionDialog(props) {\n  const [value, setValue] = React.useState(null);\n  const [open, toggleOpen] = React.useState(false);\n  const [dialogValue, setDialogValue] = React.useState({ name: '' });\n  const dispatch = useDispatch()\n  const classes = useStyles(theme)\n\n  useEffect(() => {\n    if (!value) return\n    \n    if (value.new) {\n      console.log('NEW VALUE')\n      dispatch(postFormTrait(value))\n    }\n    else {\n      dispatch(setFormTrait(value))\n      \n    }\n  }, [value])\n  \n  \n  \n  const handleClose = () => {\n    setDialogValue({\n      name: '',\n      type: '',\n    });\n\n    toggleOpen(false);\n  };\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setValue({\n      name: dialogValue.name,\n      type: props.traits[0].type,\n      new: true\n    });\n    handleClose();\n  };\n  \n  \n  const handleChange = (event, newValue) => {\n    if (typeof newValue === 'string') {\n      // timeout to avoid instant validation of the dialog's form.\n      setTimeout(() => {\n        toggleOpen(true);\n        setDialogValue({\n          name: newValue,\n        });\n      });\n    } else if (newValue && newValue.inputValue) {\n      toggleOpen(true);\n      setDialogValue({\n        name: newValue.inputValue,\n        type: props.traits[0].type\n      });\n    } else {\n      setValue(newValue);\n    }\n  }\n  \n  const filterOptions = (options, params) => {\n    const filtered = filter(options, params);\n\n    if (params.inputValue !== '') {\n      filtered.push({\n        inputValue: params.inputValue,\n        name: `Add \"${params.inputValue}\"`,\n      });\n    }\n\n    return filtered;\n  }\n  \n  const getOptionLabel = (option) => {\n    if (typeof option === 'number') return\n    if (typeof option === 'string') return option;\n    \n    if (option.inputValue) return option.inputValue;\n    \n    return option.name;\n  }\n  \n  \n  \n  \n  return (\n    <React.Fragment>\n      {!props.traits ? null : <Autocomplete\n        value={value}\n        onChange={handleChange}\n        filterOptions={filterOptions}\n        id={`${props.type.split(' ').join('')}`}\n        options={props.traits}\n        getOptionLabel={getOptionLabel}\n        selectOnFocus\n        clearOnBlur\n        className={classes.autocomplete}\n        handleHomeEndKeys\n        renderOption={(option) => option.name}\n        style={{ width: '100%', margin: 5 }}\n        freeSolo\n        // maxHeight={'75%'}\n        // size='small'\n        renderInput={(params) => (\n          <TextField {...params} \n            label={props.type}\n            className={classes.root}\n            color=\"primary\"\n            style={{ boxSizing: \"border-box\" }}\n            variant=\"standard\" />\n        )}\n      />}\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <form onSubmit={handleSubmit}>\n          <DialogTitle id=\"form-dialog-title\">Add new {props.type}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Did not see what you were looking for in our list? Please, add it!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              value={dialogValue.name}\n              onChange={(event) => setDialogValue({ ...dialogValue, name: event.target.value })}\n              label={props.type}\n              type=\"text\"\n            />\n            {/* <TextField\n              margin=\"dense\"\n              id=\"name\"\n              value={dialogValue.year}\n              onChange={(event) => setDialogValue({ ...dialogValue, year: event.target.value })}\n              label=\"year\"\n              type=\"number\"\n            /> */}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button type=\"submit\" color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","/home/mark/appAcademy/capstone2/capstone/client/src/utilities.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/reducer/createCharacters.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/actions/createCharacters.js",["148","149"],"import {\n  // API,\n  SET_IMAGE_URL,\n  SET_CHARACTER_TRAIT,\n  SET_BIO,\n  TOKEN_KEY,\n  SET_NEW_CHARACTER_TRAIT,\n  SET_NEW_TRAIT,\n} from '../constants/constants';\nimport { baseApiUrl, originUrl } from '../../config/config';\n\nexport const setFormTrait = (trait) => async (dispatch) => {\n  if (!trait) return;\n  dispatch({ type: SET_CHARACTER_TRAIT, payload: trait });\n};\n\nexport const setImageUrl = (imageUrl) => async (dispatch) => {\n  dispatch({ type: SET_IMAGE_URL, payload: imageUrl });\n};\n\nexport const setBio = (bio) => async (dispatch) => {\n  dispatch({ type: SET_BIO, payload: bio });\n};\n\n// export const postFormTrait = trait => dispatch => {\n// const token = localStorage.get(TOKEN_KEY);\n\n//   return {\n//     type: API,\n//     payload: {\n//       endpoint: 'traits',\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${token}`\n//       },\n//       body: trait,\n//       actionConst: SET_CHARACTER_TRAIT,\n//     }\n//   }\n// }\n\nexport const postFormTrait = (trait) => async (dispatch) => {\n  const token = localStorage.getItem(TOKEN_KEY);\n\n  const response = await fetch(`${baseApiUrl}/traits`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(trait),\n  });\n\n  if (response.ok) {\n    const payload = await response.json();\n    console.log('POST FORM TRAIT RESPONSE: ', payload);\n    dispatch({ type: SET_CHARACTER_TRAIT, payload });\n    dispatch({ type: SET_NEW_TRAIT, payload })\n  }\n};\n","/home/mark/appAcademy/capstone2/capstone/client/src/components/Material-UI/AppBar.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/components/structure/Grid/Grid.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/components/theme.js",["150"],"/home/mark/appAcademy/capstone2/capstone/client/src/components/DisplayCharacter/DisplayCharacter.jsx",["151","152"],"import React, { useEffect } from 'react';\nimport './display_character.css';\nimport imageFrame from \"./image_frame.png\";\nimport portal from './portal.jpg';\nimport CharacterInfo from './CharacterInfo/CharacterInfo';\nimport { useSelector } from 'react-redux';\n\n\nexport default function DisplayCharacter() {\n  const imageUrl = useSelector(state => state.createCharacters.imageUrl)\n  \n  \n  return (\n    <div className=\"display_character\">\n      <div className='image_wrapper'>\n        <div \n          style={{backgroundImage: `url(${imageUrl ? imageUrl : portal})`}}\n          className=\"character_image_box\">\n          <img \n            src={imageFrame}\n            className='character_image'\n            alt=\"image frame\" />\n        </div>\n        \n      </div>\n      \n      \n      <div className=\"character_info_wrapper\">\n        <CharacterInfo />\n      </div>\n    </div>\n  )\n}","/home/mark/appAcademy/capstone2/capstone/client/src/components/DisplayCharacter/CharacterInfo/CharacterInfo.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/store/actions/characters.js",[],"/home/mark/appAcademy/capstone2/capstone/client/src/components/SplashPage/SplashPage.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/components/SplashPage/AuthModal/AuthModal.jsx",[],"/home/mark/appAcademy/capstone2/capstone/client/src/components/authForms/SignUpForm.jsx",["153","154","155"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Button from '@material-ui/core/Button';\n\nimport { login, signUp } from '../../store/authentication';\nimport theme from '../theme';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    minHeight: '400px',\n    minWidth: '400px',\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  \n  title: {\n    margin: '40px auto 0px',\n    fontFamily: `'Sonsie One', cursive`,\n    fontSize: '50px'\n  },\n  \n  subTitle: {\n    margin: '40px auto 50px',\n    fontSize: '20px'\n  },\n  \n  textField: {\n    margin: '10px 0',\n    errorText: {\n      display: 'table'\n    }\n  },\n  \n  button_wrapper: {\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  \n  buttons: {\n    width: '100%',\n    minHeight: '40px',\n    marginTop: '30px'\n  }\n  \n}))\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [errors, setErrors] = useState([]);\n  const token = useSelector((state) => state.authentication.token);\n  const dispatch = useDispatch();\n  const classes = useStyles(theme)\n  \n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n  \n  const handleSignUpClick = () => {\n    if (password !== confirm) {\n      setErrors(['Your passwords did not match. Please try again.']);\n      return\n    }\n    \n    const newUser = {\n      username,\n      email,\n      password,\n      confirm,\n    };\n    dispatch(signUp(newUser))\n  };\n  \n  const handleDemoClick = () => {\n    dispatch(login('Demo-lition', 'password'));\n  };\n  \n  \n\n  // if (token) {\n  //   return <Redirect to='/' />;\n  // }\n  \n  return (\n    <div className={classes.wrapper}>\n      \n      <h1 className={classes.title}>Muse</h1>\n      <h1 className={classes.subTitle}>Sign Up</h1>\n    \n      <TextField \n        label=\"Username\" \n        variant=\"outlined\" \n        value={username}\n        className={classes.textField}\n        required\n        onChange={updateProperty(setUsername)} />\n      \n      <TextField \n        label=\"Email\" \n        variant=\"outlined\" \n        value={email}\n        className={classes.textField}\n        required\n        onChange={updateProperty(setEmail)} />\n      \n      <TextField \n        label=\"Password\" \n        variant=\"outlined\" \n        value={password}\n        className={classes.textField}\n        type='password'\n        required\n        onChange={updateProperty(setPassword)} />\n      \n      <TextField \n        label=\"Confirm Password\" \n        variant=\"outlined\" \n        value={confirm}\n        className={classes.textField}\n        type='password'\n        error={password !== confirm ? true : false}\n        helperText={password !== confirm ? 'Passwords do not match' : ''}\n        required\n        onChange={updateProperty(setConfirm)} />\n      \n      <div className={classes.button_wrapper}>\n        <Button \n          onClick={handleSignUpClick} \n          variant='contained'\n          color='primary'\n          disableElevation\n          className={classes.buttons}\n        >Sign Up\n        </Button> \n        \n        <Button \n          onClick={handleDemoClick} \n          variant='contained'\n          color='secondary'\n          disableElevation\n          className={classes.buttons}\n        >Demo\n        </Button>\n         \n      </div>\n    </div>\n  )\n};\n\nexport default LoginForm;","/home/mark/appAcademy/capstone2/capstone/client/src/components/authForms/LoginForm.jsx",["156","157"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../../store/authentication';\n// import './auth.css';\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport theme from '../theme';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    minHeight: '400px',\n    minWidth: '400px',\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  \n  title: {\n    margin: '40px auto 0px',\n    fontFamily: `'Sonsie One', cursive`,\n    fontSize: '50px'\n  },\n  \n  subTitle: {\n    margin: '40px auto 50px',\n    fontSize: '20px'\n  },\n  \n  textField: {\n    margin: '10px 0'\n  },\n  \n  button_wrapper: {\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  \n  buttons: {\n    width: '100%',\n    minHeight: '40px',\n    marginTop: '30px'\n  }\n  \n}))\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const token = useSelector((state) => state.authentication.token);\n  const dispatch = useDispatch();\n  const classes = useStyles(theme)\n  \n  \n  const handleClick = () => {\n    dispatch(login(username, password));\n  };\n  \n  const handleDemoClick = () => {\n    dispatch(login('Demo-lition', 'password'));\n  };\n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n\n  // if (token) {\n  //   return <Redirect to='/' />;\n  // }\n  \n  return (\n    <div className={classes.wrapper}>\n      \n      <h1 className={classes.title}>Muse</h1>\n      <h1 className={classes.subTitle}>Welcome Back</h1>\n    \n      <TextField \n        label=\"Username\" \n        variant=\"outlined\" \n        value={username}\n        className={classes.textField}\n        onChange={updateProperty(setUsername)} />\n      \n      <TextField \n        label=\"Password\" \n        variant=\"outlined\" \n        value={password}\n        className={classes.textField}\n        type='password'\n        onChange={updateProperty(setPassword)} />\n      \n      <div className={classes.button_wrapper}>\n        <Button \n          onClick={handleClick} \n          variant='contained'\n          color='primary'\n          disableElevation\n          className={classes.buttons}\n        >Login\n        </Button> \n        \n        <Button \n          onClick={handleDemoClick} \n          variant='contained'\n          color='secondary'\n          disableElevation\n          className={classes.buttons}\n        >Demo\n        </Button> \n      </div>\n      \n      {/* <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='username'\n          value={username}\n          onChange={updateProperty(setUsername)}\n        />\n        <input\n          type='password'\n          placeholder='Password'\n          value={password}\n          onChange={updateProperty(setPassword)}\n        />\n        <button type='submit'>Login</button>\n      </form> */}\n    </div>\n  )\n};\n\nexport default LoginForm;","/home/mark/appAcademy/capstone2/capstone/client/src/components/Material-UI/NavListDivider.jsx",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":2,"column":25,"nodeType":"164","messageId":"165","endLine":2,"endColumn":30},{"ruleId":"162","severity":1,"message":"166","line":2,"column":32,"nodeType":"164","messageId":"165","endLine":2,"endColumn":38},{"ruleId":"162","severity":1,"message":"167","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":18},{"ruleId":"162","severity":1,"message":"168","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":22},{"ruleId":"162","severity":1,"message":"169","line":8,"column":8,"nodeType":"164","messageId":"165","endLine":8,"endColumn":14},{"ruleId":"162","severity":1,"message":"170","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":20},{"ruleId":"162","severity":1,"message":"171","line":10,"column":9,"nodeType":"164","messageId":"165","endLine":10,"endColumn":20},{"ruleId":"158","replacedBy":"172"},{"ruleId":"160","replacedBy":"173"},{"ruleId":"162","severity":1,"message":"174","line":13,"column":10,"nodeType":"164","messageId":"165","endLine":13,"endColumn":22},{"ruleId":"175","severity":1,"message":"176","line":74,"column":6,"nodeType":"177","endLine":74,"endColumn":8,"suggestions":"178"},{"ruleId":"162","severity":1,"message":"179","line":83,"column":9,"nodeType":"164","messageId":"165","endLine":83,"endColumn":24},{"ruleId":"175","severity":1,"message":"176","line":102,"column":6,"nodeType":"177","endLine":102,"endColumn":14,"suggestions":"180"},{"ruleId":"175","severity":1,"message":"176","line":107,"column":6,"nodeType":"177","endLine":107,"endColumn":20,"suggestions":"181"},{"ruleId":"158","replacedBy":"182"},{"ruleId":"160","replacedBy":"183"},{"ruleId":"162","severity":1,"message":"184","line":13,"column":8,"nodeType":"164","messageId":"165","endLine":13,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":54,"column":6,"nodeType":"177","endLine":54,"endColumn":13,"suggestions":"185"},{"ruleId":"162","severity":1,"message":"186","line":7,"column":3,"nodeType":"164","messageId":"165","endLine":7,"endColumn":26},{"ruleId":"162","severity":1,"message":"187","line":10,"column":22,"nodeType":"164","messageId":"165","endLine":10,"endColumn":31},{"ruleId":"162","severity":1,"message":"188","line":4,"column":7,"nodeType":"164","messageId":"165","endLine":4,"endColumn":11},{"ruleId":"162","severity":1,"message":"189","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":19,"column":11,"nodeType":"192","endLine":22,"endColumn":33},{"ruleId":"162","severity":1,"message":"193","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":18},{"ruleId":"162","severity":1,"message":"194","line":56,"column":10,"nodeType":"164","messageId":"165","endLine":56,"endColumn":16},{"ruleId":"162","severity":1,"message":"195","line":57,"column":9,"nodeType":"164","messageId":"165","endLine":57,"endColumn":14},{"ruleId":"162","severity":1,"message":"193","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":18},{"ruleId":"162","severity":1,"message":"195","line":50,"column":9,"nodeType":"164","messageId":"165","endLine":50,"endColumn":14},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Navigation' is defined but never used.","'ProtectedRoute' is defined but never used.","'AppBar' is defined but never used.","'baseApiUrl' is defined but never used.","'handleClick' is assigned a value but never used.",["196"],["197"],"'setFormTrait' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'handleSaveClick' is assigned a value but never used.",["199"],["200"],["196"],["197"],"'sizing' is defined but never used.",["201"],"'SET_NEW_CHARACTER_TRAIT' is defined but never used.","'originUrl' is defined but never used.","'font' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Redirect' is defined but never used.","'errors' is assigned a value but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [dispatch]",{"range":"210","text":"211"},"Update the dependencies array to be: [avatar, dispatch]",{"range":"212","text":"213"},"Update the dependencies array to be: [characterBio, dispatch]",{"range":"214","text":"215"},"Update the dependencies array to be: [dispatch, value]",{"range":"216","text":"217"},[2504,2506],"[dispatch]",[3064,3072],"[avatar, dispatch]",[3164,3178],"[characterBio, dispatch]",[1622,1629],"[dispatch, value]"]